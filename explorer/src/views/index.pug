extends layout

block content
  script(src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0")
  script.
    $(document).ready(function() {
      window.chartColors = {
        red: 'rgb(255, 99, 132)',
        orange: 'rgb(255, 159, 64)',
        yellow: 'rgb(255, 205, 86)',
        green: 'rgb(75, 192, 192)',
        blue: 'rgb(54, 162, 235)',
        purple: 'rgb(153, 102, 255)',
        grey: 'rgb(201, 203, 207)'
      };
      $.ajax("/ext/getchartsdata")
        .done(function (data) {
          console.log(data);
          var txConfig = {
            type: 'line',
            data: {
              labels: Object.keys(data.tx).map(k => moment(parseInt(k) * 1000).format ("D MMM")),
              datasets: [{
                label: 'Transactions',
                backgroundColor: window.chartColors.red,
                borderColor: window.chartColors.red,
                data: Object.values(data.tx),
                fill: false,
              }]
            },
            options: {
              responsive: true,
              title: {
                display: true,
                text: 'Transactions last 14 days'
              },
              tooltips: {
                mode: 'index',
                intersect: false,
              },
              hover: {
                mode: 'nearest',
                intersect: true
              },
              scales: {
                x: {
                  display: true,
                  scaleLabel: {
                    display: true,
                    labelString: 'Date'
                  }
                },
                y: {
                  display: true,
                  scaleLabel: {
                    display: true,
                    labelString: 'Value'
                  }
                }
              }
            }
          };
          var txAmountConfig = {
            type: 'line',
            data: {
              labels: Object.keys(data.amount).map(k => moment(parseInt(k) * 1000).format ("D MMM")),
              datasets: [{
                label: 'Amount',
                fill: false,
                backgroundColor: window.chartColors.blue,
                borderColor: window.chartColors.blue,
                data: Object.values(data.amount),//.map(v => (v / 1000).toFixed(2)),
              }]
            },
            options: {
              responsive: true,
              title: {
                display: true,
                text: 'Total Tx Amount last 14 days'
              },
              tooltips: {
                mode: 'index',
                intersect: false,
              },
              hover: {
                mode: 'nearest',
                intersect: true
              },
              scales: {
                x: {
                  display: true,
                  scaleLabel: {
                    display: true,
                    labelString: 'Date'
                  }
                },
                y: {
                  display: true,
                  scaleLabel: {
                    display: true,
                    labelString: 'Value'
                  }
                }
              }
            }
          };
          var ctxTx = document.getElementById ('transactions-chart').getContext ('2d');
          var ctxTxAmount = document.getElementById ('transactions-amount-chart').getContext ('2d');
          window.txChart = new Chart (ctxTx, txConfig);
          window.txAmountChart = new Chart (ctxTxAmount, txAmountConfig);
        });
    });
  script.
    var setting_maxTxCount = parseInt("#{settings.index.last_txs}");
    var setting_txPerPage = parseInt("#{settings.index.txs_per_page}");
    var lengthMenuOpts = [];
    var lengthMenuOptsAdd = [ 10, 25, 50, 75, 100, 250, 500, 1000 ];
    for (i=0; i < lengthMenuOptsAdd.length; i++) {
      if (setting_maxTxCount >= lengthMenuOptsAdd[i]) {
        lengthMenuOpts.push(lengthMenuOptsAdd[i]);
      }
    }
    if (setting_maxTxCount < setting_txPerPage) {
      var displayLengthMax = setting_maxTxCount;
    } else {
      var displayLengthMax = setting_txPerPage;
    }
    $(document).ready(function(){
      var stable = $('#block-table').dataTable( {  
        autoWidth: true,      
        searching: true,
        ordering: false,
        responsive: true,
        lengthChange: false,
        processing: true,
        paging: false,
        info: false,
        ajax: {
          url: '/ext/summary',
          dataSrc: function ( json ) {
          console.log(json.data);
            json.data[0]['height'] = "<a href='/block/" + json.data[0]['hash'] + "'>" + json.data[0]['height'] + "</a>";
            return json.data;
          }
        },
        columns: [
          //{ data: 'height', width: '8%' },
          { data: 'difficulty', width: '10%' },
          //{ data: 'size', width:'10%' },
          //{ data: 'txs', width: '10%' },
          { data: 'supply', width: '15%' },
          //{ data: 'time', width: '20%' },
        ]
      });
      var rtable = $('#recent-table').dataTable( {  
        autoWidth: false,      
        searching: false,
        ordering: false,
        lengthChange: false,
        responsive: true,
        processing: true,
        serverSide: true,
        iDisplayLength: displayLengthMax,
        lengthMenu: lengthMenuOpts,
        ajax: '/ext/getlasttxsajax/0',
        columns: [
          {className: "TxTable__cell"},
          {className: "TxTable__cell"},
          {className: "TxTable__cell"},
          {className: "TxTable__cell"},
          {className: "TxTable__cell"},
        ],
        rowCallback: function(row, data, index) {
          var blockindex = data[0]; //variables for better readability
          var blockhash = data[1]; //variables for better readability
          var txhash = data[2]; //variables for better readability
          var outputs = data[3]; //variables for better readability
          var amount = (data[4] / 100000000).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':8,'useGrouping':true}); //variables for better readability
          var amountParts = amount.split('.');
          var amount = amountParts[0] + '.<span class="decimal">' + amountParts[1] + '</span>';
          var splittedDate = data[5].split(" ");
          var date = splittedDate.slice(0, 4); //variables for better readability
          var time = splittedDate.slice(4); //variables for better readability
          $("td:eq(0)", row).html('<a href="/block/' + blockhash + '">' + blockindex + '</a>');
          $("td:eq(1)", row).html('<a href="/tx/' + txhash + '">' + txhash + '</a>').addClass("d-none d-md-none d-lg-table-cell hidden-xs");
          $("td:eq(2)", row).html(outputs).addClass("d-none d-md-none d-lg-table-cell hidden-xs");
          $("td:eq(3)", row).html(amount);
          $("td:eq(4)", row).html(`<span class="TxTable__date">${date.join(" ")}</span>&nbsp;${time.join(" ")}`);
        },
      });

      const toFirst = $ (".TxTableActions__toFirst");
      const toLast = $ (".TxTableActions__toLast");

      toLast.before($(".dataTables_paginate"))

      $(".TxTable + .row").remove();

      const rDataTable = rtable.DataTable();

      toFirst.on ("click", () => {
        rDataTable.page("first").draw(false);
      })

      toLast.on ("click", () => {
        rDataTable.page("last").draw(false);
      })

      rDataTable.on("page", () => {
        var info = rtable.DataTable().page.info();

        if (info.page === 0) {
          toFirst.addClass("disabled");
        } else {
          toFirst.removeClass("disabled");
        }

        if (info.page === info.pages - 1) {
          toLast.addClass("disabled");
        } else {
          toLast.removeClass("disabled");
        }
      })
      .on("length", () => {
        toFirst.addClass("disabled");
        toLast.removeClass("disabled");
      })

      $(".TxTableActions__changeLength").on('input', function() {
        const val = $(this).find("option:selected").val();

        rtable.DataTable().page.len(val).draw();
      });

      setInterval( function () {
        rtable.api().ajax.reload(null, false);
        stable.api().ajax.reload(null, false);
      }, 60000 );
    });

  if error !== null && warning !== null
    .row
      .col-md-12
        if error !== null
          .alert.alert-danger.alert-dismissable(role='alert')
            button.close(type='button', data-dismiss='alert') ×
            strong #{settings.locale.ex_error} : #{error}
        if warning !== null
          .alert.alert-warning.alert-dismissable(role='alert')
            button.close(type='button', data-dismiss='alert') ×
            strong #{settings.locale.ex_warning} #{warning}

  .col-md-12
    .Charts.clearfix
      .col-md-6
        canvas#transactions-chart
      .col-md-6
        canvas#transactions-amount-chart

  .col-md-12
    .Transactions
      .Transactions__header
        strong.Transactions__title #{settings.locale.ex_latest_transactions}

        form.form-inline.Transactions__search(method='post', action='/search')
          input.form-control(type='text', name='search', placeholder=settings.locale.ex_search_message)
          button.btn.btn-success(type='submit') #{settings.locale.ex_search_button}

        .Transactions__connections.hidden-xs
          span#lblBlockcount -
          |&nbsp;/&nbsp;
          span#lblConnections -

      table#recent-table.table.table-striped.TxTable
        thead
          tr
            th #{settings.locale.ex_block}
            th.hidden-xs #{settings.locale.tx_hash}
            th.hidden-xs #{settings.locale.tx_recipients}
            th #{settings.locale.mkt_amount} (#{settings.symbol})
            th #{settings.locale.timestamp}
        tbody

    .TxTableActions
      span.TxTableActions__toFirst.disabled.hidden-sm.hidden-xs To the First page
      .TxTableActions__changeLength.hidden-sm.hidden-xs
        | Showing
        select.form-control
          each val in [ 10, 25, 50, 75, 100, 250, 500, 1000 ]
            option= val
        | entries

      span.TxTableActions__toLast.hidden-sm.hidden-xs To the Last page
